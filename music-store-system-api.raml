#%RAML 1.0
title: Music Store System API

description: Music Store System API sole purpose is to fetch data from DB and/or store data in DB.
mediaType:
  - application/json
version: v1
protocols:
  - HTTP

types:
  Category:
    description: Product category
    type: !include data-types/category.raml
  CategorytDTO:
    description: DTO to be used with POST and PUT methods
    type: !include data-types/post-category-dto.raml
  Artist:
    description: Product artist
    type: !include data-types/artist.raml
  ArtistDTO:
    description: DTO to be used with POST and PUT methods
    type: !include data-types/post-artist-dto.raml
  Product:
    description: Main resource type
    type: !include data-types/product.raml
  PostProductDTO:
    description: DTO to be used with POST and PUT methods
    type: !include data-types/post-product-dto.raml

traits:
  paginated: !include traits/pageable.raml
  sorted: !include traits/sortable.raml
  client-id-required: !include traits/client-id-required.raml

/products:
  get:
    is: [ client- paginated, sorted ]
    displayName: GET all products
    description: Retrieves all products from database
    responses:
      200:
        body:
          application/json:
            type: Product[]
            examples: !include examples/response-products.raml
  /{id}:
    get:
      displayName: GET a single product
      description: Retrieves a single product from database
      responses:
        200:
          body:
            application/json:
              type: Product
              examples: !include examples/response-product.raml
        404:
          body:
            application/json:
              example:
                message: "Product not found!"
    put:
      displayName: PUT a product to database
      description: Updates a product in the database
      body:
        application/json:
          type: PostProductDTO
          examples: !include examples/post-product.raml
      responses:
        200:
          body:
            application/json:
              examples: !include examples/response-product.raml
    delete:
      displayName: DELETE a product
      description: Removes a product from the database
      responses:
        200:
          body:
            application/json:
              examples:
                message: Product deleted
  /category/{id}:
    get:
      is: [ paginated, sorted]
      displayName: GET products by category id
      description: Retrieves all products from a given category
      responses:
        200:
          body:
            application/json:
              type: Product[]
              examples: !include examples/response-products.raml
  /category/{name}:
    get:
      is: [ paginated, sorted]
      displayName: GET products by category name
      description: Retrieves all products from a given category
      responses:
        200:
          body:
            application/json:
              type: Product[]
              examples: !include examples/response-products.raml
  /artist/{name}:
    get:
      is: [ paginated, sorted ]
      displayName: GET products by artist name
      description: Retrieves all products for a given artist
      responses:
        200:
          body:
            application/json:
              type: Product[]
              examples: !include examples/response-products.raml
  /search/{query}:
    get:
      is: [ paginated, sorted ]
      displayName: GET products by provided query
      description: Retrieves products containing search query in their respective product name field
      responses:
        200:
          body:
            application/json:
              type: Product[]
              examples: !include examples/response-products.raml
  /range:
    get:
      is: [ paginated, sorted ]
      displayName: GET products between given price range
      description: Retrieves products between given price range
      queryParameters:
        start:
          type: number
          format: double
          default: 0.00
          minimum: 0.00
          example: 10.00
        end:
          type: number
          format: double
          default: 1000.00
          maximum: 10000.00
          example: 30.00
      responses:
        200:
          body:
            application/json:
              type: Product[]
              examples: !include examples/response-products.raml
  post:
    displayName: POST a product to database
    description: Saves a single product to database
    body:
      application/json:
        type: PostProductDTO
        examples: !include examples/post-product.raml
    responses:
      201:
        body:
          application/json:
            examples: !include examples/response-product.raml
/artists:
  get:
    is: [ paginated ]
    displayName: GET all artists
    description: Retrieves all artists from the database
    responses:
      200:
        body:
          application/json:
            type: Artist[]
            examples: !include examples/response-artists.raml
  post:
    displayName: SAVE an artist
    description: Saves an artist to the database
    body:
      application/json:
        type: ArtistDTO
        examples: !include examples/post-artist.raml
    responses:
      201:
        body:
          application/json:
            examples: !include examples/response-artist.raml
  /{id}:
    get:
      displayName: GET a single artist
      description: Retrieves a single artist from the database
      responses:
        200:
          body:
            application/json:
              type: Artist
              examples: !include examples/response-artist.raml
        404:
          body:
            application/json:
              example:
                message: "Artist not found!"
    put:
      displayName: PUT an artist to database
      description: Updates an artist in the database
      body:
        application/json:
          type: ArtistDTO
          examples: !include examples/post-artist.raml
      responses:
        200:
          body:
            application/json:
              examples: !include examples/response-artist.raml
    delete:
      displayName: DELETE an artist
      description: Removes an artist from the database
      responses:
        200:
          body:
            application/json:
              examples:
                message: Artist deleted
/categories:
  get:
    is: [ paginated ]
    displayName: GET all categories
    description: Retrieves all categories from the database
    responses:
      200:
        body:
          application/json:
            type: Category[]
            examples: !include examples/response-categories.raml
  post:
    displayName: SAVE a category
    description: Saves a category to the database
    body:
      application/json:
        type: CategorytDTO
        examples: !include examples/post-category.raml
    responses:
      201:
        body:
          application/json:
            examples: !include examples/response-category.raml
  /{id}:
    get:
      displayName: GET a single category
      description: Retrieves a single category from the database
      responses:
        200:
          body:
            application/json:
              type: Category
              examples: !include examples/response-category.raml
        404:
          body:
            application/json:
              example:
                message: "Category not found!"
    put:
      displayName: PUT a category to database
      description: Updates a category in the database
      body:
        application/json:
          type: CategorytDTO
          examples: !include examples/post-category.raml
      responses:
        200:
          body:
            application/json:
              examples: !include examples/response-category.raml
    delete:
      displayName: DELETE a category
      description: Removes a category from the database
      responses:
        200:
          body:
            application/json:
              examples:
                message: Category deleted
    